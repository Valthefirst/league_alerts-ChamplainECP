@startuml viewAllArticles
skinparam packageStyle rectangle


package "Presentation Layer" {
    class ArticleController {
        -articleService: ArticleService
        + getAllArticleForASpecificSport(tagName : String): Flux<ArticleResponseModel>
    }

   class ArticleResponseModel {
        - String title;
        - String body;
        - int wordCount;
        - ArticleStatus articleStatus;
        - String tags;
        - LocalDateTime timePosted;
        }


    ArticleController --> ArticleResponseModel : uses

}

package "Business Layer" {
    interface ArticleService {
        + getAllArticleForASpecificSport(tagName : String): Flux<ArticleResponseModel>
    }
    class ArticleServiceImpl {
        - articleRepository: ArticleRepository

        + getAllArticleForASpecificSport(tagName : String): Flux<ArticleResponseModel>
    }

    ArticleServiceImpl --> ArticleService : implements
    ArticleController --> ArticleService: uses

}




package "Data Access Layer" {
    interface ArticleRepository {
        + findAllArticlesByTags(tagName : String): Flux<Article>
    }

    class Article{
        - String id
        - articleIdentifer: ArticleIdentifer
        - title: String;
        - body: String;
        - wordCount: Integer;
        - articleStatus: ArticleStatus;
        - tags: String;
        - timePosted: LocalDateTime;
        - photoUrl: string
        - description: String
    }

    class Content{
        - title: String;
        - body: String;
        - wordCount: Integer
    }

   enum ArticleStatus {
            PUBLISHED
            DRAFT
            ARCHIVED
        }

    class ArticleIdentifer{
        - articleId: String

        + ArticleIdentifer(articleId: String)
    }



Article --> ArticleIdentifer : has
Article --> Content : has
Article --> ArticleStatus : has
ArticleServiceImpl --> ArticleRepository : uses
ArticleRepository --> Article : uses
}


@enduml
