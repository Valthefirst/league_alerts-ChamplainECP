@startuml

class ArticleController {
    articleService : ArticleService
    + createArticle() : ResponseEntity<ArticleRequestModel>
}

class Article {
    - articleIdentifier : ArticleIdentifier
    - title : String
    - body : String
    - wordCount : String
    - tags : Tags
    - timePosted : Date
    - author : Author
}

class ArticleServiceImpl {
    - articleRepository : ArticleRepository
    + createArticle(articleRequestDTO : ArticleRequestDTO) : ResponseEntity<ArticleResponseDTO>
}

interface ArticleService {
    + createArticle(articleRequestDTO : ArticleRequestDTO) : ResponseEntity<ArticleResponseDTO>
}

class Author {
    - authorId : AuthorIdentifier
    - firstName : String
    - lastName : String
    - email : String
    - bio : String
    + getFullName() : String
}

class ArticleRequestDTO {
    - title : String
    - body : String
    - tags : Tags
    - authorId : AuthorIdentifier
}

class ArticleResponseDTO {
    - articleId : ArticleIdentifier
    - title : String
    - body : String
    - wordCount : String
    - timePosted : Date
    - authorIdentifier : AuthorIdentifier
}

class Tags {
    - tags : List<String>
}

class ArticleIdentifier {
    - id : String
}

class AuthorIdentifier {
    - id : String
}

ArticleController --> ArticleService : Uses
ArticleServiceImpl --> ArticleRepository : Uses
ArticleService --> ArticleRequestDTO : Receives
ArticleService --> ArticleResponseDTO : Returns
Article --> Author : Associated With
ArticleRequestDTO --> AuthorIdentifier : References
ArticleResponseDTO --> AuthorName : Contains

@enduml