@startuml viewAllArticles
skinparam packageStyle rectangle

package "ArticleSubdomain" {

    class ArticleController {
        -articleService: ArticleService
        + getAllArticleForASpecificSport(tagName : String): Flux<ArticleResponseModel>
    }

    class ArticleResponseModel {
        - String title;
        - String body;
        - int wordCount;
        - ArticleStatus articleStatus;
        - String tags;
        - LocalDateTime timePosted;
        - String photoUrl;
        - String articleDescription;
    }

    interface ArticleService {
        + getAllArticleForASpecificSport(tagName : String): Flux<ArticleResponseModel>
    }

    class ArticleServiceImpl {
        - articleRepository: ArticleRepository
        + getAllArticleForASpecificSport(tagName : String): Flux<ArticleResponseModel>
    }

    interface ArticleRepository {
        + findAllArticlesByTags(tagName : String): Flux<Article>
    }

    class Article {
        - String id;
        - articleIdentifer: ArticleIdentifer;
        - title: String;
        - body: String;
        - wordCount: Integer;
        - articleStatus: ArticleStatus;
        - tags: String;
        - timePosted: LocalDateTime;
        - photoUrl: String;
        - articleDescription: String;
    }

    class Content {
        - title: String;
        - body: String;
        - wordCount: Integer;
    }

    enum ArticleStatus {
        PUBLISHED
        DRAFT
        ARCHIVED
    }

    class ArticleIdentifer {
        - articleId: String;
        + ArticleIdentifer(articleId: String);
    }

    ArticleResponseModel --> Article
    ArticleController --> ArticleService : uses
    ArticleServiceImpl --> ArticleService : implements
    ArticleServiceImpl --> ArticleRepository : uses
    ArticleRepository --> Article : queries
    Article --> ArticleIdentifer
    Article --> Content
    Article --> ArticleStatus

}

@enduml
