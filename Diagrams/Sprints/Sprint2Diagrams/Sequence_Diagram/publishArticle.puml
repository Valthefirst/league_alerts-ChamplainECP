@startuml

actor Reader

participant ReactApplication as "<<View>>\nReactApplication"
participant LandingPage as "<<View>>\nLandingPage"
participant CreateAccountPage as "<<View>>\nCreateAccountPage"
participant "ArticleController" as Controller
participant "ArticleServiceImpl" as ServiceImpl
participant "ArticleRepository" as Repository
participant "ArticleRequestDTO" as RequestDTO
participant "ArticleResponseDTO" as ResponseDTO
participant "Article" as Article
participant "Author" as Author
participant "AuthorIdentifier" as AuthorId
participant "Database" as DB

Reader -> ReactApplication : Open Application
ReactApplication -> LandingPage : Display Landing Page
Reader -> LandingPage : Click "Create Account"
LandingPage -> CreateAccountPage : Navigate to Create Account Page
Reader -> CreateAccountPage : Submit Article Form

CreateAccountPage -> Controller : createArticle(request)
Controller -> ServiceImpl : createArticle(requestDTO)
ServiceImpl -> RequestDTO : createArticle(requestDTO)
RequestDTO -> AuthorId : references authorId
ServiceImpl -> Repository : saveArticle(article)
Repository -> DB : store article data
DB -> Article : create(article)
Article -> Author : associateWithAuthor
Article -> ResponseDTO : generateArticleResponse
ServiceImpl -> ResponseDTO : return article response
Controller -> ReactApplication : return ResponseEntity<ArticleResponseDTO>
ReactApplication -> LandingPage : Show Confirmation or Error Message
LandingPage -> Reader : Display Confirmation/Error

@enduml